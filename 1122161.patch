# HG changeset patch
# Parent 50b95032152c1043d8dd7b8ffeb1051564466503
# User Jose Antonio Olivera Ortega <josea.olivera@gmail.com>
Bug 1122161 - Redirected channels should respect skip service worker flag. r=nsm

diff --git a/dom/workers/test/serviceworkers/fetch/fetch_tests.js b/dom/workers/test/serviceworkers/fetch/fetch_tests.js
--- a/dom/workers/test/serviceworkers/fetch/fetch_tests.js
+++ b/dom/workers/test/serviceworkers/fetch/fetch_tests.js
@@ -118,16 +118,35 @@ fetchXHR('hello-after-extracting.gz', fu
 });
 
 fetchXHR('http://example.com/tests/dom/base/test/file_CrossSiteXHR_server.sjs?status=200&allowOrigin=*', function(xhr) {
   my_ok(xhr.status == 200, "cross origin load with correct headers should be successful");
   my_ok(xhr.getResponseHeader("access-control-allow-origin") == null, "cors headers should be filtered out");
   finish();
 });
 
+// Test that when the page fetches a url the controlling SW forces a redirect to
+// another location. This other location fetch should also be intercepted by
+// the SW.
+fetchXHR('something.txt', function(xhr) {
+  my_ok(xhr.status == 200, "load should be successful");
+  my_ok(xhr.responseText == "something else response body", "load should have something else");
+  finish();
+});
+
+// Test fetch will internally get it's SkipServiceWorker flag set. The request is
+// made from the SW through fecth(). Fetch() fetches a server-side JavaScript
+// file that force a redirect. The redirect location fetch does not go through
+// the SW.
+fetchXHR('redirect_serviceworker.sjs', function(xhr) {
+  my_ok(xhr.status == 200, "load should be successful");
+  my_ok(xhr.responseText == "// empty worker, always succeed!\n", "load should have redirection content");
+  finish();
+});
+
 expectAsyncResult();
 fetch('http://example.com/tests/dom/base/test/file_CrossSiteXHR_server.sjs?status=200&allowOrigin=*')
 .then(function(res) {
   my_ok(res.ok, "Valid CORS request should receive valid response");
   my_ok(res.type == "cors", "Response type should be CORS");
   res.text().then(function(body) {
     my_ok(body === "<res>hello pass</res>\n", "cors response body should match");
     finish();
diff --git a/dom/workers/test/serviceworkers/fetch_event_worker.js b/dom/workers/test/serviceworkers/fetch_event_worker.js
--- a/dom/workers/test/serviceworkers/fetch_event_worker.js
+++ b/dom/workers/test/serviceworkers/fetch_event_worker.js
@@ -167,9 +167,29 @@ onfetch = function(ev) {
                      "opener.postMessage({status: 'done'}, '*');" +
                    "</script>";
         ev.respondWith(new Response(body, {headers: {'Content-Type': 'text/html'}}));
     } else {
       seenIndex = true;
       ev.respondWith(fetch(ev.request.url));
     }
   }
-}
+
+  else if (ev.request.url.contains('something.txt')) {
+    ev.respondWith(Promise.resolve(
+      Response.redirect('fetch/somethingelse.txt')
+    ));
+  }
+
+  else if (ev.request.url.contains('somethingelse.txt')) {
+    ev.respondWith(Promise.resolve(
+      new Response('something else response body', {})
+    ));
+  }
+
+  else if (ev.request.url.contains('redirect_serviceworker.sjs')) {
+    // The redirect_serviceworker.sjs server-side JavaScript file redirects to
+    // 'http://mochi.test:8888/tests/dom/workers/test/serviceworkers/worker.js'
+    // The redirected fetch should not go through the SW since the original
+    // fetch was initiated from a SW.
+    ev.respondWith(fetch('redirect_serviceworker.sjs'));
+  }
+};
