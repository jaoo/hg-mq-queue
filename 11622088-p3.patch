# HG changeset patch
# User Jose Antonio Olivera Ortega <jaoo@jaoo.es>
# Parent  814965f0537785cf490e3cec58a3627a7fe22b7f
Bug 11622088: Part 3 - Some tweaks to make b2g build

diff --git a/dom/workers/ServiceWorkerManager.cpp b/dom/workers/ServiceWorkerManager.cpp
--- a/dom/workers/ServiceWorkerManager.cpp
+++ b/dom/workers/ServiceWorkerManager.cpp
@@ -1893,18 +1893,17 @@ public:
 NS_IMETHODIMP
 ServiceWorkerManager::SendPushEvent(JS::Handle<JS::Value> aOriginAttributes,
                                     const nsACString& aScope,
                                     const nsAString& aData,
                                     JSContext* aCx)
 {
 #ifdef MOZ_SIMPLEPUSH
   return NS_ERROR_NOT_AVAILABLE;
-#endif
-
+#else
   OriginAttributes attrs;
   if (!aOriginAttributes.isObject() || !attrs.Init(aCx, aOriginAttributes)) {
     return NS_ERROR_INVALID_ARG;
   }
 
   nsRefPtr<ServiceWorker> serviceWorker =
     CreateServiceWorkerForScope(attrs, aScope);
   if (!serviceWorker) {
@@ -1918,27 +1917,27 @@ ServiceWorkerManager::SendPushEvent(JS::
     new SendPushEventRunnable(serviceWorker->GetWorkerPrivate(), aData,
                               serviceWorkerHandle);
 
   if (NS_WARN_IF(!r->Dispatch(aCx))) {
     return NS_ERROR_FAILURE;
   }
 
   return NS_OK;
+#endif
 }
 
 NS_IMETHODIMP
 ServiceWorkerManager::SendPushSubscriptionChangeEvent(JS::Handle<JS::Value> aOriginAttributes,
                                                       const nsACString& aScope,
                                                       JSContext* aCx)
 {
 #ifdef MOZ_SIMPLEPUSH
   return NS_ERROR_NOT_AVAILABLE;
-#endif
-
+#else
   OriginAttributes attrs;
   if (!aOriginAttributes.isObject() || !attrs.Init(aCx, aOriginAttributes)) {
     return NS_ERROR_INVALID_ARG;
   }
 
   nsRefPtr<ServiceWorker> serviceWorker =
     CreateServiceWorkerForScope(attrs, aScope);
   if (!serviceWorker) {
@@ -1951,16 +1950,17 @@ ServiceWorkerManager::SendPushSubscripti
     new SendPushSubscriptionChangeEventRunnable(
       serviceWorker->GetWorkerPrivate(), serviceWorkerHandle);
 
   if (NS_WARN_IF(!r->Dispatch(aCx))) {
     return NS_ERROR_FAILURE;
   }
 
   return NS_OK;
+#endif
 }
 
 NS_IMETHODIMP
 ServiceWorkerManager::GetReadyPromise(nsIDOMWindow* aWindow,
                                       nsISupports** aPromise)
 {
   AssertIsOnMainThread();
   MOZ_ASSERT(aWindow);
@@ -2224,17 +2224,17 @@ ServiceWorkerManager::Unregister(nsIPrin
   nsCOMPtr<nsIURI> scopeURI;
   nsresult rv = NS_NewURI(getter_AddRefs(scopeURI), aScope, nullptr, nullptr);
   if (NS_WARN_IF(NS_FAILED(rv))) {
     return NS_ERROR_DOM_SECURITY_ERR;
   }
 #endif
 
   nsAutoCString originSuffix;
-  rv = PrincipalToScopeKey(aPrincipal, originSuffix);
+  nsresult rv = PrincipalToScopeKey(aPrincipal, originSuffix);
   if (NS_WARN_IF(NS_FAILED(rv))) {
     return rv;
   }
 
   NS_ConvertUTF16toUTF8 scope(aScope);
   ServiceWorkerJobQueue* queue = GetOrCreateJobQueue(originSuffix, scope);
   MOZ_ASSERT(queue);
 
